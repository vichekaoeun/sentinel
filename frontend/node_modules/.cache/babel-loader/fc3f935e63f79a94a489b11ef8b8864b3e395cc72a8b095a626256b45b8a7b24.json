{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport websocketService from '../services/websocketService';\nexport const useWebSocket = () => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [error, setError] = useState(null);\n  const connect = useCallback(() => {\n    websocketService.connect(() => {\n      setIsConnected(true);\n      setError(null);\n    }, error => {\n      setIsConnected(false);\n      setError(error);\n    });\n  }, []);\n  const disconnect = useCallback(() => {\n    websocketService.disconnect();\n    setIsConnected(false);\n  }, []);\n  const subscribe = useCallback((destination, callback) => {\n    return websocketService.subscribe(destination, callback);\n  }, []);\n  const unsubscribe = useCallback(destination => {\n    websocketService.unsubscribe(destination);\n  }, []);\n  useEffect(() => {\n    connect();\n    return () => {\n      disconnect();\n    };\n  }, [connect, disconnect]);\n  return {\n    isConnected,\n    error,\n    connect,\n    disconnect,\n    subscribe,\n    unsubscribe\n  };\n};\n_s(useWebSocket, \"WdDGAFiGGWGGNaQv6MKr0vuMIHc=\");","map":{"version":3,"names":["useState","useEffect","useCallback","websocketService","useWebSocket","_s","isConnected","setIsConnected","error","setError","connect","disconnect","subscribe","destination","callback","unsubscribe"],"sources":["/Users/vichekaoeun/Projects/sentinel/sentinel/frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport websocketService from '../services/websocketService';\n\nexport const useWebSocket = () => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [error, setError] = useState(null);\n\n  const connect = useCallback(() => {\n    websocketService.connect(\n      () => {\n        setIsConnected(true);\n        setError(null);\n      },\n      (error) => {\n        setIsConnected(false);\n        setError(error);\n      }\n    );\n  }, []);\n\n  const disconnect = useCallback(() => {\n    websocketService.disconnect();\n    setIsConnected(false);\n  }, []);\n\n  const subscribe = useCallback((destination, callback) => {\n    return websocketService.subscribe(destination, callback);\n  }, []);\n\n  const unsubscribe = useCallback((destination) => {\n    websocketService.unsubscribe(destination);\n  }, []);\n\n  useEffect(() => {\n    connect();\n    return () => {\n      disconnect();\n    };\n  }, [connect, disconnect]);\n\n  return {\n    isConnected,\n    error,\n    connect,\n    disconnect,\n    subscribe,\n    unsubscribe,\n  };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,OAAOC,gBAAgB,MAAM,8BAA8B;AAE3D,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,OAAO,GAAGR,WAAW,CAAC,MAAM;IAChCC,gBAAgB,CAACO,OAAO,CACtB,MAAM;MACJH,cAAc,CAAC,IAAI,CAAC;MACpBE,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EACAD,KAAK,IAAK;MACTD,cAAc,CAAC,KAAK,CAAC;MACrBE,QAAQ,CAACD,KAAK,CAAC;IACjB,CACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,UAAU,GAAGT,WAAW,CAAC,MAAM;IACnCC,gBAAgB,CAACQ,UAAU,CAAC,CAAC;IAC7BJ,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,SAAS,GAAGV,WAAW,CAAC,CAACW,WAAW,EAAEC,QAAQ,KAAK;IACvD,OAAOX,gBAAgB,CAACS,SAAS,CAACC,WAAW,EAAEC,QAAQ,CAAC;EAC1D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGb,WAAW,CAAEW,WAAW,IAAK;IAC/CV,gBAAgB,CAACY,WAAW,CAACF,WAAW,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACdS,OAAO,CAAC,CAAC;IACT,OAAO,MAAM;MACXC,UAAU,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,CAACD,OAAO,EAAEC,UAAU,CAAC,CAAC;EAEzB,OAAO;IACLL,WAAW;IACXE,KAAK;IACLE,OAAO;IACPC,UAAU;IACVC,SAAS;IACTG;EACF,CAAC;AACH,CAAC;AAACV,EAAA,CA7CWD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}